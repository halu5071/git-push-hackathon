apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.2'
    defaultConfig {
        applicationId "io.moatwel.github"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        def CLIENT_ID
        def CLIENT_SECRET

        def file = project.file("gradle.properties")
        if (file.exists()) {
            def properties = new Properties()
            properties.load(file.newDataInputStream())
            CLIENT_ID = properties.get("CLIENT_ID")
            CLIENT_SECRET = properties.get("CLIENT_SECRET")
        } else {
            CLIENT_ID = System.getenv("CLIENT_ID")
            CLIENT_SECRET = System.getenv("CLIENT_SECRET")
        }

        buildConfigField 'String', 'CLIENT_ID', "$CLIENT_ID"
        buildConfigField 'String', 'CLIENT_SECRET', "$CLIENT_SECRET"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Timber
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Rx
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"

    // Support Library
    implementation "com.android.support:appcompat-v7:$support_lib_version"
    implementation "com.android.support:customtabs:$support_lib_version"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    // RxLifecycle
    implementation "com.trello.rxlifecycle2:rxlifecycle:$rxlifecycle_version"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android:$rxlifecycle_version"
    implementation "com.trello.rxlifecycle2:rxlifecycle-components:$rxlifecycle_version"
    implementation "com.trello.rxlifecycle2:rxlifecycle-kotlin:$rxlifecycle_version"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android-lifecycle-kotlin:$rxlifecycle_version"

    // Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"

    /**
     * data
     */

    // Stetho
    implementation "com.facebook.stetho:stetho:$stetho_version"
    implementation "com.facebook.stetho:stetho-okhttp3:$stetho_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-java8:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Moshi
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

    // Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    testImplementation "org.mockito:mockito-core:$mockito_verion"
    testImplementation "org.powermock:powermock-core:$powermock_version"
    testImplementation "org.powermock:powermock-module-junit4:$powermock_version"
    testImplementation "org.powermock:powermock-api-mockito2:$powermock_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
}
repositories {
    mavenCentral()
}
